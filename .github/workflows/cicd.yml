name: CI/CD DockerHub + Render

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta (tags y labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,format=long

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-render:
    needs: build-and-push
    runs-on: ubuntu-latest
    env:
      RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
      RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
    steps:
      - name: Trigger Render deploy (Deploy Hook)
        if: ${{ env.RENDER_DEPLOY_HOOK_URL != '' }}
        run: |
          curl -fsSL -X POST "${{ env.RENDER_DEPLOY_HOOK_URL }}"

      - name: Trigger Render deploy (API v1)
        if: ${{ env.RENDER_DEPLOY_HOOK_URL == '' && env.RENDER_API_KEY != '' && env.RENDER_SERVICE_ID != '' }}
        run: |
          curl -fsSL -X POST "https://api.render.com/v1/services/${{ env.RENDER_SERVICE_ID }}/deploys"                 -H "Authorization: Bearer ${{ env.RENDER_API_KEY }}"                 -H "Content-Type: application/json"                 -d '{}'
